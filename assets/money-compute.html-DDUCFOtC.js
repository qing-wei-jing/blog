import{_ as s,c as a,a as p,o as t}from"./app-CKVqHTbh.js";const e={};function o(c,n){return t(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="金额计算精度" tabindex="-1"><a class="header-anchor" href="#金额计算精度"><span>金额计算精度</span></a></h1><p>📌 <strong>业务场景</strong> 公司通过爬虫获取界面上的商品价格（例如 <code>2.01 元</code>），需要将其转换为以 <strong>分为单位的整数</strong>（即 <code>201</code>）存储到数据库中。 后端接收价格时为 <code>String</code> 类型，最终需转换为 <code>Integer</code> 类型存入数据库。</p><p>⚠️ <strong>问题再现</strong> 直接使用 <code>Double</code> 转换会因浮点数精度问题导致计算错误：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token class-name">String</span> money <span class="token operator">=</span> <span class="token string">&quot;2.01&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// ❌ 错误示范：使用Double处理金额</span></span>
<span class="line"><span class="token class-name">Double</span> esMoney <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>esMoney<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 打印：2.01（表面显示正常）</span></span>
<span class="line"><span class="token class-name">Double</span> v <span class="token operator">=</span> esMoney <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打印：200.99999999999997（误差被放大）</span></span>
<span class="line"><span class="token keyword">int</span> moneyInt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Double</span><span class="token punctuation">(</span>esMoney <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>moneyInt<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 最终错误结果：200（正确应为201）</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>🔍 <strong>问题原因</strong><code>Double</code> 采用二进制存储数据，<strong>部分十进制小数（如 2.01）无法被精确表示</strong>，只能存储近似值。 当进行乘法运算（如 ×100）时，微小的误差会被放大，导致最终结果出错。</p><p>✅ <strong>正确解决方案</strong> 使用 <code>BigDecimal</code> 处理金额计算（底层基于十进制运算，无精度损失）：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token class-name">String</span> money <span class="token operator">=</span> <span class="token string">&quot;2.01&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// ✅ 正确示范：使用BigDecimal处理金额</span></span>
<span class="line"><span class="token class-name">BigDecimal</span> bigDecimal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 注意：必须用String构造，而非double</span></span>
<span class="line"><span class="token keyword">int</span> moneyInt2 <span class="token operator">=</span> bigDecimal<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>moneyInt2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 正确结果：201</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>📝 <strong>核心总结</strong></p><ol><li>处理 <strong>金额、高精度浮点数</strong> 时，务必使用 <code>BigDecimal</code> 而非 <code>Double/Float</code>。</li><li>初始化 <code>BigDecimal</code> 时，<strong>必须传入 String 类型参数</strong>（避免因 double 本身的精度问题引入误差）。</li></ol><p>💻 <strong>完整测试代码</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> money <span class="token operator">=</span> <span class="token string">&quot;2.01&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ❌ 错误示范</span></span>
<span class="line">    <span class="token class-name">Double</span> esMoney <span class="token operator">=</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>esMoney<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2.01</span></span>
<span class="line">    <span class="token class-name">Double</span> v <span class="token operator">=</span> esMoney <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 200.99999999999997</span></span>
<span class="line">    <span class="token keyword">int</span> moneyInt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Double</span><span class="token punctuation">(</span>esMoney <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>moneyInt<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 200</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ✅ 正确示范</span></span>
<span class="line">    <span class="token class-name">BigDecimal</span> bigDecimal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> moneyInt2 <span class="token operator">=</span> bigDecimal<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>moneyInt2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 201</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)])])}const i=s(e,[["render",o],["__file","money-compute.html.vue"]]),u=JSON.parse('{"path":"/backend/money-compute.html","title":"金额计算精度","lang":"zn-ch","frontmatter":{},"git":{"updatedTime":1758252490000,"contributors":[{"name":"hmw","username":"hmw","email":"major@2025","commits":1,"url":"https://github.com/hmw"}],"changelog":[{"hash":"dc57aff36322bd7ba9c203c164437c7e2b7949d1","time":1758252490000,"email":"major@2025","author":"hmw","message":"增加金额计算精度文章"}]},"filePathRelative":"backend/money-compute.md"}');export{i as comp,u as data};
